---
- name: "Install rbenv"
  hosts: target
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ rbenv_path }}"
  vars:
    ruby_version: "2.5.8"
    bashrc: "/home/deploy/.bashrc"
    rbenv_path: "/home/deploy/.rbenv/bin/"
  tasks:
    - name: Install dependency library
      ansible.builtin.apt:
        pkg:
          - git
          - curl
          - libssl-dev
          - libreadline-dev
          - zlib1g-dev
          - autoconf
          - bison
          - build-essential
          - libyaml-dev
          - libreadline-dev
          - libncurses5-dev
          - libffi-dev
          - libgdbm-dev
        update_cache: true
      become: true
    - name: "Download install shell script"
      ansible.builtin.get_url:
        url: https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer
        dest: /home/deploy/rbenv-installer.sh
        mode: "0755"
        group: deploy
        owner: deploy
      register: rbenv_installer_file
      ignore_errors: true
      become: true
    - name: "Install shell script"
      ansible.builtin.command: bash /home/deploy/rbenv-installer.sh
      register: rbenv_install_status
      when: rbenv_installer_file.msg | regex_search("^OK")
      ignore_errors: true
    - name: "Setup rbenv environment in the bashrc file"
      ansible.builtin.blockinfile:
        path: "{{ bashrc }}"
        block: |
          export PATH="$HOME/.rbenv/bin:$PATH"
          eval "$(rbenv init -)"
      when: rbenv_install_status.rc == 0
    - name: "Check ruby version installed"
      ansible.builtin.shell: "rbenv versions | grep {{ ruby_version }}"
      register: ruby_installed
      ignore_errors: true
      when: rbenv_install_status.rc == 0
    - name: "Install ruby 2.5.8"
      ansible.builtin.command: "{{ rbenv }} install 2.5.8"
      when: ruby_installed.rc == 1
